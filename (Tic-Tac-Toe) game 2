using System;

class TicTacToe
{
    static char[,] board = {
        {'1', '2', '3'},
        {'4', '5', '6'},
        {'7', '8', '9'}
    };
    static char currentPlayer = 'X';
    static int playerXScore, playerOScore;

    static void Main()
    {
        while (true)
        {
            Console.Clear();
            Console.WriteLine("Tic Tac Toe Menu");
            Console.WriteLine("a) New Game");
            Console.WriteLine("b) About the Author");
            Console.WriteLine("c) Exit");

            char choice = char.ToLower(Console.ReadKey().KeyChar);
            Console.WriteLine();

            switch (choice)
            {
                case 'a':
                    PlayGame();
                    break;
                case 'b':
                    AboutTheAuthor();
                    break;
                case 'c':
                    Environment.Exit(0);
                    break;
                default:
                    Console.WriteLine("Invalid choice. Please try again.");
                    break;
            }
        }
    }

    static void PlayGame()
    {
        board = new char[,]
        {
            {'1', '2', '3'},
            {'4', '5', '6'},
            {'7', '8', '9'}
        };
        currentPlayer = 'X';

        while (true)
        {
            DrawBoard();
            if (TakeTurn() && CheckForWin())
            {
                DrawBoard();
                Console.WriteLine($"Player {currentPlayer} wins!");
                UpdateScore();
                break;
            }
            if (CheckForDraw())
            {
                Console.WriteLine("It's a draw!");
                break;
            }
            SwitchPlayer();
        }

        Console.WriteLine("Game over!");
        Console.ReadLine();
    }

    static void DrawBoard()
    {
        Console.Clear();
        Console.WriteLine("Tic Tac Toe\n");

        for (int row = 0; row < 3; row++)
        {
            for (int col = 0; col < 3; col++)
            {
                Console.Write(board[row, col]);
                Console.Write(col < 2 ? " | " : "\n");
            }

            if (row < 2) Console.WriteLine("---------");
        }

        Console.WriteLine($"\nPlayer X Score: {playerXScore} | Player O Score: {playerOScore}\n");
    }

    static bool TakeTurn()
    {
        Console.Write($"Player {currentPlayer}, enter a number (1-9): ");
        int choice;
        if (int.TryParse(Console.ReadLine(), out choice) && choice >= 1 && choice <= 9)
        {
            int row = (choice - 1) / 3;
            int col = (choice - 1) % 3;

            if (board[row, col] != 'X' && board[row, col] != 'O')
            {
                board[row, col] = currentPlayer;
                return true;
            }
        }

        Console.WriteLine("Invalid move. Try again.");
        return false;
    }

    static void SwitchPlayer() => currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';

    static bool CheckForWin()
    {
        for (int i = 0; i < 3; i++)
        {
            if ((board[i, 0] == currentPlayer && board[i, 1] == currentPlayer && board[i, 2] == currentPlayer) ||
                (board[0, i] == currentPlayer && board[1, i] == currentPlayer && board[2, i] == currentPlayer) ||
                (board[0, 0] == currentPlayer && board[1, 1] == currentPlayer && board[2, 2] == currentPlayer) ||
                (board[0, 2] == currentPlayer && board[1, 1] == currentPlayer && board[2, 0] == currentPlayer))
            {
                return true;
            }
        }

        return false;
    }

    static void UpdateScore() => (currentPlayer == 'X') ? playerXScore++ : playerOScore++;

    static bool CheckForDraw()
    {
        foreach (char cell in board)
        {
            if (cell != 'X' && cell != 'O')
                return false;
        }

        return true;
    }

    static void AboutTheAuthor() => Console.WriteLine("About the Author:\nYour author information goes here.\n");
}
